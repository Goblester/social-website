{"version":3,"sources":["components/Navigation/Navigation.module.css","components/Navigation/Friends/Friend/Friend.tsx","components/Navigation/Friends/Friends.tsx","redux/navigation-reducer.ts","utils/object-helpers.ts","redux/users-reducer.ts","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.ts","StoreContext.tsx","components/Navigation/Friends/FriendsContainer.tsx","components/Navigation/Navigation.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Users/User/User.tsx","components/common/Paginator/Paginator.tsx","components/Users/Users.tsx","redux/selectors/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/LoginForm.tsx","components/Login/Login.tsx","components/Login/LoginContainer.tsx","hoc/LazyLoading/LazyLoading.tsx","App.tsx","index.tsx","components/Users/Users.module.css","utils/validation/validators.tsx","assets/images/preloader.svg","components/common/Preloader/Preloader.tsx","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","components/Navigation/Friends/Friend/Friend.module.css","components/common/FormsControls/FormControls.module.css","components/Navigation/Friends/Friends.module.css","hoc/FormControl/FormControl.tsx","components/common/FormsControls/FormsControls.tsx","redux/profile-reducer.ts","redux/dialogs-reducer.ts","assets/images/userPhoto.png","components/common/Preloader/Preloader.module.css","API/api.ts"],"names":["module","exports","Friend","props","className","s","item","f","friend","href","circularLandscape","src","photo","alt","name","Friends","friendsElements","friends","map","el","t","id","initialState","navigationReducer","state","updateObjectsInArray","items","itemId","objPropName","newObjProps","users","currentPage","totalPagesCount","isFletching","followingToggleInProgress","followingIdInProgress","followAccept","userId","type","unFollowAccept","setUsers","setCurrentPage","toggleIsFletching","followInProgress","toggleFollowingInProgress","followUnfollowFlow","typeOfAction","dispatch","actionCreator","a","usersAPI","data","resultCode","userReducer","action","followed","filter","userData","isAuthorized","submitError","undefined","captchaUrl","setUserData","isAuth","setSubmitError","setCaptchaURL","payload","setUser","authAPI","getAuthInfo","authReducer","initialized","appReducer","rootReducer","combineReducers","profilePage","profileReducer","messagesPage","dialogsReducer","navigationPage","usersPage","auth","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","StoreContext","React","createContext","FriendsContainer","Consumer","getState","Navigation","navigation","to","News","Music","Settings","User","smallPhoto","status","usersContainer","userPhoto","disabled","some","onClick","unFollow","follow","info","location","Paginator","currentItem","itemCount","portionSize","useState","currentPortion","setCurrentPortion","totalPortionCount","Math","ceil","rightBorderItem","i","push","pagesComponent","p","onPageChanged","btn","Users","usersComponent","u","photos","small","usersWrapper","usersHeader","Preloader","getUsersSuper","createSelector","getPagesCount","getCurrentPage","getIsFetching","getFollowingToggleInProgress","getFollowingIdInProgress","UsersContainer","page","requestUsers","this","Component","connect","pageSize","getUsers","totalUsersCount","totalCount","Header","login","logOut","header","logo","HeaderContainer","setLogOut","logout","LoginForm","setAuthorization","onSubmit","formData","email","password","rememberMe","captcha","validate","value","FORM_ERROR","render","handleSubmit","error","submitting","form","component","Input","placeholder","combineValidators","isRequired","maxLength","Login","LoginContainer","loginData","setLogin","securityAPI","getCaptchaURL","url","messages","LazyLoading","fallback","ProfileContainer","lazy","DialogsContainer","App","initializeApp","exact","path","AppContainer","promise","Promise","all","withRouter","SamuraiJsApp","ReactDOM","document","getElementById","validators","reduce","validator","length","preloader","Element","input","meta","hasError","invalid","touched","textareaForm","TextArea","posts","message","likesCount","profile","submitStatus","errorMessage","addPost","post","setProfile","setStatusAccept","setPhotoSuccess","changeSubmitStatus","requestProfile","profileAPI","getProfileInfo","then","setStatus","requestStatus","getStatus","setPhoto","newPhoto","setProfileInfo","profileInfo","mappedProfileInfo","newProfile","response","newPost","dialogs","v1","fromYou","sendMessage","newMessage","instance","axios","create","withCredentials","baseURL","headers","get","followUser","unFollowUser","delete","put","photoFile","FormData","append"],"mappings":"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","file":"static/js/main.66ed6178.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__3J_Oc\",\"item\":\"Navigation_item__2FcA3\"};","import React from \"react\";\r\nimport \"./../../Navigation.module.css\";\r\nimport s from \"./../../Navigation.module.css\";\r\nimport \"./Friend.module.css\";\r\nimport f from \"./Friend.module.css\";\r\n\r\ntype FriendPropsType = {\r\n    key: number,\r\n    name: string,\r\n    photo: string\r\n}\r\n\r\nfunction Friend(props: FriendPropsType) {\r\n    return (\r\n        <div className={`${s.item} ${f.friend}`}>\r\n            <a href=\"\">\r\n                <div className={f.circularLandscape}>\r\n                    <img src={props.photo} alt=\"\"/>\r\n                </div>\r\n                <div>\r\n                    {props.name}\r\n                </div>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Friend;","import React from \"react\";\r\nimport \"./Friends.module.css\";\r\nimport s from \"./Friends.module.css\";\r\nimport Friend from \"./Friend/Friend\";\r\n\r\ntype FriendsPropsType = {\r\n    friends: Array<{\r\n        id: number,\r\n        name: string,\r\n        photo: string\r\n    }>\r\n};\r\n\r\nfunction Friends(props:FriendsPropsType) {\r\n    let friendsElements = props.friends.map((el,t) => {\r\n        return <Friend  key={el.id} name={el.name} photo={el.photo}/>;\r\n    });\r\n    return (\r\n        <div className={s.friends}>\r\n            <span>Friends</span>\r\n            {friendsElements}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Friends;","type FriendType = {\r\n    id: number,\r\n    name: string,\r\n    photo: string\r\n}\r\n\r\n\r\ntype NavigationPageType = {\r\n    friends: Array<FriendType>\r\n}\r\n\r\nconst initialState: NavigationPageType = {\r\n    friends: []\r\n};\r\n\r\nconst navigationReducer = (state: NavigationPageType = initialState, action: NavigationActionTypes) => {\r\n    return state;\r\n}\r\n\r\nexport type NavigationActionTypes = {}\r\n\r\nexport default navigationReducer;\r\n\r\n","\r\nexport const updateObjectsInArray = (items: Array<any>, itemId: number, objPropName: string, newObjProps:{[key:string]:any})=>{\r\n    return items.map(item => {\r\n        if (item[objPropName] === itemId) {\r\n            return {...item, ...newObjProps};\r\n        }\r\n        return item;\r\n    })\r\n}","import {Dispatch} from 'react';\r\nimport {ThunkAction} from 'redux-thunk';\r\nimport {usersAPI} from '../API/api';\r\nimport {updateObjectsInArray} from '../utils/object-helpers';\r\n\r\nexport type PhotosType = {\r\n    small: string,\r\n    large: string\r\n}\r\n\r\nexport type UserType = {\r\n    name: string,\r\n    id: number,\r\n    uniqueUrlName: string,\r\n    photos: PhotosType,\r\n    status: string,\r\n    followed: boolean\r\n}\r\n\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    currentPage: 1,\r\n    totalPagesCount: 0,\r\n    isFletching: false,\r\n    followingToggleInProgress: false,\r\n    followingIdInProgress: [] as Array<number>\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\n\r\nfunction userReducer(state: InitialStateType = initialState, action: UsersActionTypes): InitialStateType {\r\n    switch (action.type) {\r\n        case 'social-network/users/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectsInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case 'social-network/users/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectsInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case 'social-network/users/SET-USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'social-network/users/SET-PAGES-COUNT':\r\n            return {\r\n                ...state,\r\n                totalPagesCount: action.totalPagesCount\r\n            }\r\n        case 'social-network/users/SET-CURRENT-PAGE':\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case 'social-network/users/TOGGLE-IS-FLETCHING':\r\n            return {\r\n                ...state,\r\n                isFletching: action.isFletching\r\n            }\r\n        case 'social-network/users/FOLLOW-IN-PROGRESS':\r\n            return {\r\n                ...state,\r\n                followingToggleInProgress: action.followInProgress,\r\n                followingIdInProgress: action.followInProgress ? [...state.followingIdInProgress, action.id]\r\n                    : state.followingIdInProgress.filter(id => id !== action.id)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type UsersActionTypes =\r\n    FollowActionType\r\n    | UnFollowActionType\r\n    | SetUsersActionType\r\n    | SetTotalUserCountActionType\r\n    | SetCurrentPageActionType\r\n    | ToggleIsFletchingActionType\r\n    | FollowInProgressActionType;\r\n\r\nconst FOLLOW = 'social-network/users/FOLLOW';\r\nconst UNFOLLOW = 'social-network/users/UNFOLLOW';\r\nconst SET_USERS = 'social-network/users/SET-USERS';\r\nconst SET_PAGES_COUNT = 'social-network/users/SET-PAGES-COUNT';\r\nconst SET_CURRENT_PAGE = 'social-network/users/SET-CURRENT-PAGE';\r\nconst TOGGLE_IS_FLETCHING = 'social-network/users/TOGGLE-IS-FLETCHING';\r\nconst FOLLOW_IN_PROGRESS = 'social-network/users/FOLLOW-IN-PROGRESS';\r\n\r\nexport type FollowActionType = {\r\n    type: typeof FOLLOW,\r\n    userId: number\r\n}\r\n\r\nexport type UnFollowActionType = {\r\n    type: typeof UNFOLLOW,\r\n    userId: number\r\n}\r\n\r\nexport type SetUsersActionType = {\r\n    type: typeof SET_USERS,\r\n    users: Array<UserType>\r\n}\r\n\r\nexport type SetTotalUserCountActionType = {\r\n    type: typeof SET_PAGES_COUNT,\r\n    totalPagesCount: number\r\n}\r\n\r\nexport type SetCurrentPageActionType = {\r\n    type: typeof SET_CURRENT_PAGE,\r\n    currentPage: number\r\n}\r\n\r\nexport type ToggleIsFletchingActionType = {\r\n    type: typeof TOGGLE_IS_FLETCHING,\r\n    isFletching: boolean\r\n}\r\n\r\nexport type FollowInProgressActionType = {\r\n    type: typeof FOLLOW_IN_PROGRESS,\r\n    followInProgress: boolean,\r\n    id: number\r\n}\r\n\r\nexport const followAccept = (userId: number): FollowActionType => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport function unFollowAccept(userId: number): UnFollowActionType {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport function setUsers(users: Array<UserType>): SetUsersActionType {\r\n    return {\r\n        type: SET_USERS,\r\n        users: users\r\n    }\r\n}\r\n\r\nexport function setPagesCount(totalPagesCount: number): SetTotalUserCountActionType {\r\n    return {\r\n        type: SET_PAGES_COUNT,\r\n        totalPagesCount\r\n    }\r\n}\r\n\r\nexport function setCurrentPage(currentPage: number): SetCurrentPageActionType {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage: currentPage\r\n    }\r\n}\r\n\r\nexport function toggleIsFletching(isFletching: boolean): ToggleIsFletchingActionType {\r\n    return {\r\n        type: TOGGLE_IS_FLETCHING,\r\n        isFletching: isFletching\r\n    }\r\n}\r\n\r\nexport function followInProgress(toggleFollowingInProgress: boolean, id: number): FollowInProgressActionType {\r\n    return {\r\n        type: FOLLOW_IN_PROGRESS,\r\n        followInProgress: toggleFollowingInProgress,\r\n        id: id\r\n    }\r\n}\r\n\r\ntype ThunkResult = ThunkAction<void, InitialStateType, undefined, UsersActionTypes>\r\n\r\nexport const requestUsers = (currentPage: number, pageSize: number): ThunkResult => {\r\n    return async (dispatch: Dispatch<UsersActionTypes>) => {\r\n        dispatch(toggleIsFletching(true));\r\n        const data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFletching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setCurrentPage(currentPage));\r\n        let totalUsersCount: number = data.totalCount;\r\n        dispatch(setPagesCount(Math.ceil(totalUsersCount / pageSize)));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (userId: number, typeOfAction: 'followUser' | 'unFollowUser', dispatch: Dispatch<UsersActionTypes>, actionCreator: (userId: number) => UsersActionTypes) => {\r\n    dispatch(followInProgress(true, userId));\r\n    const data = await usersAPI[typeOfAction](userId);\r\n    dispatch(followInProgress(false, userId));\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number): ThunkResult => {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(userId, 'followUser', dispatch, followAccept);\r\n    }\r\n}\r\n\r\nexport const unFollow = (userId: number): ThunkResult => {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(userId, 'unFollowUser', dispatch, unFollowAccept);\r\n    }\r\n}\r\n\r\n\r\nexport default userReducer;","import {ThunkAction} from 'redux-thunk';\r\nimport {authAPI, securityAPI} from '../API/api';\r\nimport {LoginDataType} from '../components/Login/Login';\r\nimport {Dispatch} from 'react';\r\nimport {Action} from 'redux';\r\nimport {RootState} from './redux-store';\r\n\r\ntype InitialStateType = {\r\n    userData: UserDataType | null\r\n    isAuthorized: boolean,\r\n    submitError: string | undefined\r\n    captchaUrl: string | null\r\n}\r\n\r\n\r\nexport type UserDataType = {\r\n    id: number,\r\n    login: string,\r\n    email: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    userData: null,\r\n    isAuthorized: false,\r\n    submitError: undefined,\r\n    captchaUrl: null\r\n};\r\n\r\nfunction authReducer(state: InitialStateType = initialState, action: AuthActionTypes): InitialStateType {\r\n    switch (action.type) {\r\n        case 'social-network/auth/SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                userData: action.userData,\r\n                isAuthorized: action.isAuth,\r\n                submitError: undefined\r\n            };\r\n        case 'social-network/auth/SET-SUBMIT-ERROR':\r\n            return {\r\n                ...state,\r\n                submitError: action.submitError\r\n            }\r\n        case 'social-network/auth/SET-CAPTCHA-URL':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport type AuthActionTypes = SetUserDataActionType\r\n    | SetSubmitErrorActionType\r\n    | ReturnType<typeof setCaptchaURL>;\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET-USER-DATA';\r\nconst SET_SUBMIT_ERROR = 'social-network/auth/SET-SUBMIT-ERROR'\r\n\r\nexport type SetUserDataActionType = {\r\n    type: typeof SET_USER_DATA,\r\n    userData: UserDataType | null,\r\n    isAuth: boolean\r\n};\r\n\r\nexport type SetSubmitErrorActionType = {\r\n    type: typeof SET_SUBMIT_ERROR,\r\n    submitError: string | undefined\r\n}\r\n\r\nexport const setUserData = (data: UserDataType | null, isAuth: boolean): SetUserDataActionType => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        userData: data,\r\n        isAuth: isAuth\r\n    };\r\n}\r\n\r\nexport const setSubmitError = (submitError: string | undefined): SetSubmitErrorActionType => {\r\n    return {\r\n        type: SET_SUBMIT_ERROR,\r\n        submitError\r\n    }\r\n}\r\n\r\nexport const setCaptchaURL = (captchaUrl: string | null) => ({\r\n    type: 'social-network/auth/SET-CAPTCHA-URL',\r\n    payload: {\r\n        captchaUrl\r\n    }\r\n} as const)\r\n\r\n\r\nexport type ThunkResult<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\r\n\r\n\r\nexport function setUser(): ThunkResult {\r\n    return async function (dispatch) {\r\n        const data = await authAPI.getAuthInfo();\r\n        const isAuth = data.resultCode === 0;\r\n        dispatch(setUserData(data.data, isAuth));\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function setAuthorization(loginData: LoginDataType): ThunkResult {\r\n    return async function (dispatch) {\r\n        const data = await authAPI.setLogin(loginData);\r\n        if (data.resultCode === 0)\r\n            dispatch(setCaptchaURL(null))\r\n            dispatch(setUser());\r\n        if(data.resultCode === 10){\r\n           await dispatch(getCaptchaUrlTC())\r\n        }\r\n        else\r\n            dispatch(setSubmitError(data.messages[0]));\r\n\r\n    }\r\n}\r\n\r\nexport function getCaptchaUrlTC() {\r\n    return async function (dispatch: Dispatch<AuthActionTypes>) {\r\n        const data = await securityAPI.getCaptchaURL();\r\n        dispatch(setCaptchaURL(data.url));\r\n    }\r\n}\r\n\r\nexport function setLogOut(): ThunkResult {\r\n    return async function (dispatch: Dispatch<AuthActionTypes>) {\r\n        const data = await authAPI.logout()\r\n        if (data.resultCode === 0)\r\n            dispatch(setUserData(null, false));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import {ThunkAction} from 'redux-thunk';\r\nimport {Action} from 'redux';\r\nimport {RootState} from './redux-store';\r\nimport {setUser} from './auth-reducer';\r\n\r\ntype InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nfunction appReducer(state: InitialStateType = initialState, action: AppActionTypes): InitialStateType {\r\n    switch (action.type) {\r\n        case 'social-network/app/SET-INITIALIZED':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport type AppActionTypes = SetInitializedActionType;\r\n\r\nconst SET_INITIALIZED = 'social-network/app/SET-INITIALIZED';\r\n\r\n\r\nexport type SetInitializedActionType = {\r\n    type: typeof SET_INITIALIZED\r\n};\r\n\r\n\r\nexport const initializeSuccess = (): SetInitializedActionType => {\r\n    return {\r\n        type: SET_INITIALIZED\r\n    };\r\n}\r\n\r\ntype ThunkResult<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\r\n\r\n\r\nexport function initializeApp(): ThunkResult {\r\n    return async function (dispatch) {\r\n        const promise = dispatch(setUser());\r\n        await Promise.all([promise])\r\n        dispatch(initializeSuccess());\r\n    }\r\n}\r\n\r\n\r\nexport default appReducer;","import {createStore, combineReducers} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport navigationReducer from \"./navigation-reducer\";\r\nimport userReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunk from 'redux-thunk';\r\nimport { applyMiddleware } from \"redux\";\r\nimport appReducer from './app-reducer';\r\nimport {compose} from '@reduxjs/toolkit';\r\n\r\n\r\nlet rootReducer  = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    navigationPage: navigationReducer,\r\n    usersPage: userReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport default store;\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from \"react\";\r\nimport store from \"./redux/redux-store\";\r\n\r\n\r\n\r\nconst StoreContext  = React.createContext(store);\r\n\r\nconst Provider = (props: any) => {\r\n    return(\r\n        <StoreContext.Provider value ={props.store}>\r\n            {props.children}\r\n        </StoreContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport default StoreContext","import React from \"react\";\r\nimport Friends from \"./Friends\";\r\nimport StoreContext from \"../../../StoreContext\";\r\n\r\n\r\nfunction FriendsContainer() {\r\n\r\n    return (<StoreContext.Consumer>\r\n            {\r\n                store => {\r\n                    let state = store.getState().navigationPage;\r\n                    return (\r\n                        <Friends friends={state.friends}/>\r\n                    )\r\n                }\r\n            }\r\n        </StoreContext.Consumer>\r\n\r\n    );\r\n}\r\n\r\nexport default FriendsContainer;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Navigation.module.css';\r\nimport s from \"./Navigation.module.css\";\r\nimport FriendsContainer from \"./Friends/FriendsContainer\";\r\n\r\n\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <nav className={s.navigation}>\r\n            <ul>\r\n                <li className={`${s.item}`}><NavLink to=\"/profile\" >Profile</NavLink></li>\r\n                <li className={s.item}><NavLink to=\"/dialogs\" >Dialogs</NavLink></li>\r\n                <li className={s.item}><NavLink to=\"/news\" >News</NavLink></li>\r\n                <li className={s.item}><NavLink to=\"/music\" >Music</NavLink></li>\r\n                <li className={s.item}><NavLink to=\"/users\" >Users</NavLink></li>\r\n                <li className={s.item}><NavLink to=\"/settings\" >Settings</NavLink></li>\r\n            </ul>\r\n        <FriendsContainer/>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport \"./News.module.css\";\r\nimport s from \"./News.module.css\";\r\n\r\nfunction News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport \"./Music.module.css\";\r\nimport s from \"./Music.module.css\";\r\n\r\nfunction Music() {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport \"./Settings.module.css\";\r\nimport s from \"./Settings.module.css\";\r\n\r\nexport function Settings() {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import s from '../Users.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport userPhoto from '../../../assets/images/userPhoto.png';\r\nimport React from 'react';\r\n\r\ntype UserPropsType = {\r\n    userId: number,\r\n    smallPhoto: string,\r\n    followed: boolean,\r\n    name: string,\r\n    status: string,\r\n    followingIdInProgress: Array<number>,\r\n    unFollow: (userId: number) => void,\r\n    follow: (userId: number) => void,\r\n}\r\n\r\n\r\nexport function User({userId, followingIdInProgress,followed, name, smallPhoto, status, ...props}:UserPropsType){\r\n    return(\r\n        <div className={s.usersContainer}>\r\n            <div className={s.photo}>\r\n                <div>\r\n                    <NavLink to={`/profile/${userId}`}>\r\n                        <img src={smallPhoto !== null ? smallPhoto : userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {followed ? <button disabled={followingIdInProgress.some(id => id === userId)} onClick={() => {\r\n                            props.unFollow(userId);\r\n                        }\r\n                        }>Unfollow</button> :\r\n                        <button disabled={followingIdInProgress.some(id => id === userId)} onClick={() => {\r\n                            props.follow(userId);\r\n                        }\r\n                        }>Follow</button>}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.info}>\r\n                <div className={s.name}>{name}</div>\r\n                <div\r\n                    className={s.status}>{status !== null ? status : `text example for ${name}`}</div>\r\n                <div className={s.location}>\r\n                    <div>{userId}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import s from './Paginator.module.css';\r\nimport React, {useState} from 'react';\r\n\r\n\r\ntype PaginatorPropsType = {\r\n    currentItem: number,\r\n    itemCount: number,\r\n    portionSize: number,\r\n    onPageChanged: (page: number) => void\r\n}\r\n\r\nexport const Paginator = ({currentItem, itemCount, portionSize, ...props}: PaginatorPropsType) => {\r\n\r\n    const [currentPortion, setCurrentPortion]= useState<number>(1);\r\n\r\n    const totalPortionCount = Math.ceil(itemCount / portionSize);\r\n    const leftBorderItem = (currentPortion - 1) * portionSize + 1;\r\n    const rightBorderItem = currentPortion * portionSize;\r\n\r\n    let items = [];\r\n    for (let i = leftBorderItem; i <= rightBorderItem; i++) {\r\n        items.push(i);\r\n    }\r\n\r\n    const onPrevButtonClick = ()=>{\r\n        setCurrentPortion(currentPortion-1)\r\n    }\r\n    const onNextButtonClick = ()=>{\r\n        setCurrentPortion(currentPortion+1);\r\n    }\r\n\r\n    const pagesComponent = items.map(p => {\r\n        const onClick = () => {\r\n            props.onPageChanged(p);\r\n        }\r\n        return (\r\n            <span key={p} className={`${p === currentItem ? s.currentItem : ''} ${s.item}`} onClick={onClick}>{p}</span>\r\n\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            {currentPortion!==1&&<button className={s.btn} onClick={onPrevButtonClick}>Prev</button>}\r\n            {pagesComponent}\r\n            {currentPortion!==totalPortionCount&&<button className={s.btn} onClick={onNextButtonClick}>Next</button>}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './Users.module.css';\r\nimport s from './Users.module.css'\r\nimport {UserType} from '../../redux/users-reducer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {User} from './User/User';\r\nimport {Paginator} from '../common/Paginator/Paginator';\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>,\r\n    totalPagesCount: number,\r\n    currentPage: number,\r\n    isFletching: boolean,\r\n    followingToggleInProgress: boolean,\r\n    followingIdInProgress: Array<number>,\r\n    follow: (userId: number) => void,\r\n    unFollow: (userId: number) => void,\r\n    onPageChanged: (pageNumber: number) => void,\r\n    followInProgress: (followingToggleInProgress: boolean, followingIdInProgress: number) => void\r\n}\r\n\r\nfunction Users({\r\n                   totalPagesCount,\r\n                   currentPage,\r\n                   isFletching,\r\n                   followingToggleInProgress,\r\n                   followingIdInProgress,\r\n                   users,\r\n                   ...props\r\n               }: UsersPropsType) {\r\n\r\n\r\n    let usersComponent = users.map(u => {\r\n        return (\r\n            <User userId={u.id}\r\n                  smallPhoto={u.photos.small}\r\n                  followed={u.followed}\r\n                  name={u.name}\r\n                  status={u.status}\r\n                  followingIdInProgress={followingIdInProgress}\r\n                  unFollow={props.unFollow}\r\n                  follow={props.follow}/>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className={s.usersWrapper}>\r\n            <h2 className={s.usersHeader}>Users</h2>\r\n            {isFletching ? <Preloader/> : ''}\r\n            <Paginator portionSize={10} currentItem={currentPage} itemCount={totalPagesCount} onPageChanged={props.onPageChanged}/>\r\n            {usersComponent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import {RootState} from '../redux-store';\r\nimport {createSelector} from '@reduxjs/toolkit';\r\nimport {UserType} from '../users-reducer';\r\n\r\n\r\nexport const getUsers = (state:RootState)=>{\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsersMega = (users:Array<UserType>)=>{\r\n    return users.filter(u=>true)\r\n}\r\n\r\nexport const getUsersSuper = createSelector(getUsers, (users)=>{\r\n    return users.filter(u=>true)\r\n})\r\n\r\nexport const getPagesCount = (state:RootState)=>{\r\n    return state.usersPage.totalPagesCount\r\n}\r\n\r\nexport const getCurrentPage = (state:RootState)=>{\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state:RootState)=>{\r\n    return state.usersPage.isFletching\r\n}\r\n\r\nexport const getFollowingToggleInProgress = (state:RootState)=>{\r\n    return state.usersPage.followingToggleInProgress\r\n}\r\n\r\nexport const getFollowingIdInProgress = (state:RootState)=>{\r\n    return state.usersPage.followingIdInProgress\r\n}\r\n\r\n","import React from 'react';\r\nimport {\r\n    follow,\r\n    followInProgress,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    setUsers,\r\n    toggleIsFletching,\r\n    unFollow,\r\n    UserType\r\n} from '../../redux/users-reducer';\r\nimport {RootState} from '../../redux/redux-store';\r\nimport {connect} from 'react-redux';\r\nimport Users from './Users';\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingIdInProgress,\r\n    getFollowingToggleInProgress,\r\n    getIsFetching,\r\n    getPagesCount,\r\n    getUsersSuper\r\n} from '../../redux/selectors/users-selectors';\r\n\r\nclass UsersContainer extends React.Component<UsersContainerPropsType, never> {\r\n    constructor(props: UsersContainerPropsType) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, 10);\r\n    }\r\n\r\n    onPageChanged = (page: number) => {\r\n        this.props.setCurrentPage(page);\r\n        this.props.requestUsers(page, 10);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Users users={this.props.users}\r\n                   currentPage={this.props.currentPage}\r\n                   totalPagesCount={this.props.totalPagesCount}\r\n                   isFletching={this.props.isFletching}\r\n                   followingToggleInProgress={this.props.followingToggleInProgress}\r\n                   followingIdInProgress={this.props.followingIdInProgress}\r\n                   onPageChanged={this.onPageChanged}\r\n                   unFollow={this.props.unFollow}\r\n                   follow={this.props.follow}\r\n                   followInProgress={this.props.followInProgress}/>\r\n        )\r\n    }\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    users: Array<UserType>,\r\n    totalPagesCount: number,\r\n    currentPage: number,\r\n    isFletching: boolean,\r\n    followingToggleInProgress: boolean,\r\n    followingIdInProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (userId: number) => void,\r\n    unFollow: (userId: number) => void,\r\n    setUsers: (users: Array<UserType>) => void,\r\n    setCurrentPage: (currentPage: number) => void,\r\n    toggleIsFletching: (isFletching: boolean) => void,\r\n    followInProgress: (followingToggleInProgress: boolean, followingIdInProgress: number) => void,\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport type UsersContainerPropsType = MapDispatchPropsType & MapStatePropsType;\r\n\r\n\r\nconst mapStateToProps = (state: RootState): MapStatePropsType => {\r\n\r\n    return {\r\n        users: getUsersSuper(state),\r\n        totalPagesCount: getPagesCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFletching: getIsFetching(state),\r\n        followingToggleInProgress: getFollowingToggleInProgress(state),\r\n        followingIdInProgress: getFollowingIdInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n(mapStateToProps, {\r\n    follow,\r\n    unFollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    toggleIsFletching,\r\n    followInProgress,\r\n    requestUsers\r\n})(UsersContainer);","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Header.module.css';\r\nimport s from './Header.module.css';\r\n\r\ntype HeaderPropsType = {\r\n    login: string,\r\n    id: number,\r\n    isAuthorized: boolean,\r\n    logOut: () => void\r\n};\r\n\r\n\r\nfunction Header({login, id, isAuthorized, logOut}: HeaderPropsType) {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.logo}>\r\n                <img\r\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Facebook_Logo_%282019%29.png/1200px-Facebook_Logo_%282019%29.png\"\r\n                    alt=\"\"/>\r\n\r\n            </div>\r\n            <div className={s.auth}>\r\n                {isAuthorized ?\r\n                    <div>\r\n                        <NavLink to={`profile/` + id}>{login}</NavLink>\r\n                        <div>\r\n                            <button onClick={logOut}>log out</button>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <NavLink to={'/login'}>login</NavLink>}\r\n\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Header from './Header';\r\nimport {RootState} from '../../redux/redux-store';\r\nimport {setLogOut, setUser, UserDataType} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component<OwnHeaderPropsType, never> {\r\n\r\n    componentDidMount() {\r\n        this.props.setUser();\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Header isAuthorized={this.props.isAuthorized}\r\n                       login={this.props.userData?.login as string}\r\n                       id={this.props.userData?.id as number}\r\n                       logOut={this.props.setLogOut}\r\n        />\r\n    }\r\n\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    userData: UserDataType | null,\r\n    isAuthorized: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    setUser: () => void,\r\n    setLogOut: () => void\r\n}\r\n\r\ntype OwnHeaderPropsType = MapStatePropsType & MapDispatchPropsType;\r\n\r\nconst mapStateToProps = (state: RootState): MapStatePropsType => ({\r\n    userData: state.auth.userData,\r\n    isAuthorized: state.auth.isAuthorized\r\n});\r\n\r\n\r\nexport default connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n(mapStateToProps, {setUser, setLogOut})(HeaderContainer);","import React from 'react';\r\nimport {Field, Form} from 'react-final-form';\r\nimport {LoginDataType} from './Login';\r\nimport {Input} from '../common/FormsControls/FormsControls';\r\nimport {combineValidators, isRequired, maxLength} from '../../utils/validation/validators';\r\nimport {FORM_ERROR} from 'final-form';\r\n\r\ntype LoginFormPropsType = {\r\n    captchaUrl: string | null\r\n    setAuthorization: (loginData: LoginDataType) => void,\r\n    submitError: string | undefined,\r\n    setSubmitError: (submitError: string | undefined) => void\r\n}\r\n\r\nconst LoginForm = ({setAuthorization,captchaUrl, ...props}: LoginFormPropsType) => {\r\n    const onSubmit = (formData: LoginDataType) => {\r\n        setAuthorization({\r\n            email: formData.email,\r\n            password: formData.password,\r\n            rememberMe: formData.rememberMe,\r\n            captcha: formData.captcha\r\n        });\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Form onSubmit={onSubmit}\r\n              validate={(value) => {\r\n                  return {[FORM_ERROR]: props.submitError}\r\n              }}\r\n              render={({handleSubmit, error, form, submitting}) => {\r\n\r\n                  return (\r\n                      <form onSubmit={handleSubmit}>\r\n                          <div>\r\n                              <Field name={'email'} component={Input} type={'text'} placeholder={'email'}\r\n                                     validate={combineValidators(isRequired, maxLength(20))}/>\r\n                          </div>\r\n                          <div>\r\n                              <Field name={'password'} component={Input} type={'password'} placeholder={'password'}\r\n                                     validate={combineValidators(isRequired, maxLength(20))}/>\r\n                          </div>\r\n                          <div>\r\n                              <Field name={'rememberMe'} component={'input'} type={'checkbox'}/> remember me\r\n                          </div>\r\n                          {captchaUrl&&<div><img src={captchaUrl}/></div>}\r\n                          {captchaUrl&&<Field name={'captcha'} component={'input'} type={'text'}/>}\r\n                          <div className=\"error\">{error}</div>\r\n                          <button type={'submit'} onClick={() => {\r\n                              props.setSubmitError(undefined);\r\n                          }} disabled={submitting}>login\r\n                          </button>\r\n                      </form>\r\n                  )\r\n              }\r\n              }/>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport LoginForm from './LoginForm';\r\nimport {LoginPropsType} from './LoginContainer';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport type LoginDataType = {\r\n    email: string,\r\n    password: string,\r\n    rememberMe: true\r\n    captcha?: string\r\n}\r\n\r\nfunction Login({isAuth, setAuthorization, submitError, setSubmitError, captchaUrl}: LoginPropsType) {\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginForm captchaUrl={captchaUrl}\r\n                       setAuthorization={setAuthorization}\r\n                       submitError={submitError}\r\n                       setSubmitError={setSubmitError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Login;","import {RootState} from '../../redux/redux-store';\r\nimport {setAuthorization, setSubmitError} from '../../redux/auth-reducer';\r\nimport {connect} from 'react-redux';\r\nimport Login, {LoginDataType} from './Login';\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean,\r\n    submitError: string | undefined\r\n    captchaUrl: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    setAuthorization: (loginData: LoginDataType) => void,\r\n    setSubmitError: (submitError: string| undefined)=>void\r\n}\r\n\r\nexport type LoginPropsType = MapStatePropsType & MapDispatchPropsType;\r\n\r\nconst mapStateToProps = (state: RootState): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuthorized,\r\n    submitError: state.auth.submitError,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nconst LoginContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>\r\n(mapStateToProps, {setAuthorization, setSubmitError})(Login);\r\n\r\nexport default LoginContainer;","import React, { Suspense } from 'react';\r\nimport Preloader from '../../components/common/Preloader/Preloader';\r\n\r\nexport const LazyLoading = (Component: React.ComponentType)=>{\r\n    return(\r\n        <Suspense fallback={<Preloader />}>\r\n            <Component />\r\n        </Suspense>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport {BrowserRouter, Route, RouteComponentProps, Switch, withRouter} from 'react-router-dom';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginContainer from './components/Login/LoginContainer';\nimport {compose} from '@reduxjs/toolkit';\nimport {connect, Provider} from 'react-redux';\nimport store, {RootState} from './redux/redux-store';\nimport {initializeApp} from './redux/app-reducer';\nimport Preloader from './components/common/Preloader/Preloader';\nimport {LazyLoading} from './hoc/LazyLoading/LazyLoading';\n\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\nclass App extends React.Component<AppPropsType, never> {\n    constructor(props: AppPropsType) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n\n        return (\n            <div className=\"app-wrapper\">\n                <HeaderContainer/>\n                <Navigation/>\n                <div className=\"app-wrapper-content\">\n                    <Switch>\n                        <Route exact path={'/'}\n                               render={() => LazyLoading(ProfileContainer)}/>\n                        <Route path={'/profile/:userId?'}\n                               render={() => LazyLoading(ProfileContainer)}/>\n                        <Route path={'/dialogs'}\n                               render={() => LazyLoading(DialogsContainer)}/>\n                        <Route path={'/news'} render={() => <News/>}/>\n                        <Route path={'/music'} render={() => <Music/>}/>\n                        <Route path={'/users'}\n                               render={() => <UsersContainer/>}/>\n                        <Route path={'/settings'} render={() => <Settings/>}/>\n                        <Route path={'/login'} render={() => <LoginContainer/>}/>\n                    </Switch>\n                </div>\n            </div>\n        );\n    }\n}\n\ntype MapStatePropsType = {\n    initialized: boolean\n    isAuth: boolean\n}\ntype MapDispatchPropsType = {\n    initializeApp: () => void\n}\n\n\ntype OwnAppPropsType = MapDispatchPropsType & MapStatePropsType;\n\ntype AppPropsType = RouteComponentProps<void> & OwnAppPropsType\n\nconst mapStateToProps = (state: RootState) => ({\n    initialized: state.app.initialized,\n    isAuth: state.auth.isAuthorized\n})\n\n\nconst AppContainer = compose<React.ComponentType>(\n    connect<MapStatePropsType, MapDispatchPropsType, {}, RootState>(mapStateToProps, {initializeApp}),\n    withRouter\n)(App)\n\n\nexport const SamuraiJsApp = () => {\n    return (\n        <BrowserRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {SamuraiJsApp} from './App';\n\n\nReactDOM.render(<SamuraiJsApp/>, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrapper\":\"Users_usersWrapper__2fDMx\",\"usersHeader\":\"Users_usersHeader__htjXN\",\"usersContainer\":\"Users_usersContainer__3qKbE\",\"photo\":\"Users_photo__1TByi\",\"info\":\"Users_info__2vq6a\",\"fullName\":\"Users_fullName__1Af4i\",\"status\":\"Users_status__2_IzE\",\"location\":\"Users_location__3UJel\",\"currentPage\":\"Users_currentPage__3yZto\",\"pages\":\"Users_pages__P7Xsn\"};","\r\ntype ValidatorType = (value:any) =>undefined | string;\r\n\r\nexport const combineValidators = (...validators:Array<ValidatorType>) => (value:any) =>{\r\n    return validators.reduce((error:undefined|string, validator)=> error || validator(value), undefined);\r\n}\r\n\r\n\r\nexport const isRequired  = (value:any) =>{\r\n    if(!value){\r\n        return 'required';\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport const maxLength = (length: number) => (value:any) => {\r\n    if(value.length>length){\r\n        return `max length is ${length}`;\r\n    }\r\n    return undefined;\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.196f64f4.svg\";","import React from 'react';\r\nimport s from \"./Preloader.module.css\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nfunction Preloader(){\r\n    return(\r\n        <div className={s.preloader}><img src={preloader} alt=\"\"/></div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__19oBF\",\"logo\":\"Header_logo__2Ltu8\",\"auth\":\"Header_auth__3Qalg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentItem\":\"Paginator_currentItem__2_A7-\",\"item\":\"Paginator_item__LsCDL\",\"btn\":\"Paginator_btn__3bEAu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__2mSJL\",\"circularLandscape\":\"Friend_circularLandscape__fVekU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControls_error__3LnW-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__3RNMm\"};","import React from 'react';\r\nimport s from '../../components/common/FormsControls/FormControls.module.css';\r\n\r\nconst Element = (Element: any) => ({input, meta, ...props}: any) => {\r\n    const hasError = meta.invalid && meta.touched;\r\n    return (\r\n        <div className={s.textareaForm}>\r\n            <div className={hasError && s.error}>\r\n                <Element {...input} {...props}/>\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const ElementUI = (Element: any) => ({input, meta, ...props}: any) => {\r\n    return (\r\n        <Element {...input} {...props}/>\r\n    )\r\n}\r\n\r\nexport default Element;","import React from 'react';\r\nimport './FormControls.module.css';\r\nimport s from './FormControls.module.css';\r\nimport Element, {ElementUI} from '../../../hoc/FormControl/FormControl';\r\n\r\n/*export const FormControl = ({meta, children}: any) => {\r\n    const hasError = meta.invalid && meta.touched;\r\n    return (\r\n        <div className={s.textareaForm}>\r\n            <div className={hasError && s.error}>\r\n                {children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}*/\r\n\r\nexport const Input = Element('input');\r\n\r\nexport const TextArea = Element('textarea');\r\n\r\nexport const InputUI = ElementUI('Input')","import {PhotosType} from './users-reducer';\r\nimport {ThunkAction} from 'redux-thunk';\r\nimport {profileAPI} from '../API/api';\r\nimport {Dispatch} from 'react';\r\nimport {RootState} from './redux-store';\r\nimport {rejects} from 'assert';\r\n\r\nexport type PostType = {\r\n    id: number,\r\n    message: string,\r\n    likesCount: number\r\n}\r\n\r\nexport type ContactsType = {\r\n    facebook: string,\r\n    website: string,\r\n    vk: string,\r\n    twitter: string,\r\n    instagram: string,\r\n    youtube: string,\r\n    github: string,\r\n    mainLink: string\r\n}\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: ContactsType\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    userId: number\r\n    photos: PhotosType\r\n}\r\n\r\nexport type SubmitStatusType = 'success' | 'failed' | 'inProcess'\r\n\r\ntype InitialStateType = {\r\n    posts: Array<PostType>\r\n    profile: ProfileType | null\r\n    status: string\r\n    submitStatus: SubmitStatusType\r\n    errorMessage: string | undefined\r\n};\r\n\r\nexport type ProfileInfoType = {\r\n    aboutMe: string,\r\n    contacts: ContactsType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, How are you', likesCount: 13},\r\n        {id: 2, message: 'My first post', likesCount: 20},\r\n        {id: 3, message: 'My second post', likesCount: 15},\r\n        {id: 4, message: 'bam bam bam', likesCount: 9999}\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n    submitStatus: 'inProcess',\r\n    errorMessage: undefined\r\n};\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action: ProfilePageActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'social-network/profile/ADD-POST': {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.post,\r\n                likesCount: 32\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        }\r\n        case 'social-network/profile/SET-PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case 'social-network/profile/SET-STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case 'social-network/profile/DELETE-POST':\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts.filter(p => p.id !== action.id)]\r\n            }\r\n        case 'social-network/profile/CHANGE-SUBMIT-STATUS':\r\n\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case 'social-network/profile/SET-PHOTO-SUCCESS':\r\n            const newProfile = state.profile ? {...state.profile, photos: {...action.photos}} : null;\r\n            return {\r\n                ...state,\r\n                profile: newProfile\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport type ProfilePageActionTypes =\r\n    ReturnType<typeof changeSubmitStatus>\r\n    | AddPostActionType\r\n    | setProfileActionType\r\n    | setStatusActionType\r\n    | deletePostActionType\r\n    | setPhotoActionType;\r\nconst ADD_POST = 'social-network/profile/ADD-POST';\r\nconst SET_PROFILE = 'social-network/profile/SET-PROFILE';\r\nconst SET_STATUS = 'social-network/profile/SET-STATUS';\r\nconst DELETE_POST = 'social-network/profile/DELETE-POST';\r\nconst SET_PHOTO_SUCCESS = 'social-network/profile/SET-PHOTO-SUCCESS';\r\nconst SET_PROFILE_INFO = 'social-network/profile/SET-PROFILE-INFO';\r\n\r\n\r\nexport type AddPostActionType = {\r\n    type: typeof ADD_POST,\r\n    post: string\r\n}\r\n\r\nexport type setProfileActionType = {\r\n    type: typeof SET_PROFILE,\r\n    profile: ProfileType\r\n}\r\n\r\nexport type setStatusActionType = {\r\n    type: typeof SET_STATUS,\r\n    status: string\r\n}\r\n\r\nexport type deletePostActionType = {\r\n    type: typeof DELETE_POST,\r\n    id: number\r\n}\r\n\r\nexport type setPhotoActionType = {\r\n    type: typeof SET_PHOTO_SUCCESS\r\n    photos: PhotosType\r\n}\r\n\r\n\r\nexport const addPost = (post: string): AddPostActionType => ({type: ADD_POST, post})\r\n\r\nexport const setProfile = (profile: ProfileType): setProfileActionType => ({type: SET_PROFILE, profile: profile});\r\n\r\nexport const setStatusAccept = (status: string): setStatusActionType => ({type: SET_STATUS, status});\r\n\r\nexport const deletePost = (id: number): deletePostActionType => ({type: DELETE_POST, id})\r\n\r\nexport const setPhotoSuccess = (photos: PhotosType): setPhotoActionType => ({type: SET_PHOTO_SUCCESS, photos})\r\n\r\nexport const changeSubmitStatus = (submitStatus: SubmitStatusType, errorMessage?: string) => ({\r\n    type: 'social-network/profile/CHANGE-SUBMIT-STATUS' as const,\r\n    payload:{\r\n        submitStatus,\r\n        errorMessage\r\n    }\r\n});\r\n\r\n\r\ntype ThunkActionType = ThunkAction<void, InitialStateType, undefined, ProfilePageActionTypes>;\r\n\r\nexport function requestProfile(userId: number): ThunkAction<void, InitialStateType, undefined, ProfilePageActionTypes> {\r\n    return function (dispatch) {\r\n        profileAPI.getProfileInfo(userId)\r\n            .then((data) => {\r\n                dispatch(setProfile(data));\r\n            });\r\n    }\r\n}\r\n\r\nexport function setStatus(status: string): ThunkAction<void, InitialStateType, undefined, ProfilePageActionTypes> {\r\n    return async function (dispatch) {\r\n        const data = await profileAPI.setStatus(status);\r\n\r\n        if (data.resultCode === 0) {\r\n            dispatch(setStatusAccept(status));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function requestStatus(userId: number): ThunkAction<void, InitialStateType, undefined, ProfilePageActionTypes> {\r\n    return async function (dispatch: Dispatch<ProfilePageActionTypes>) {\r\n        const data = await profileAPI.getStatus(userId);\r\n        dispatch(setStatusAccept(data));\r\n    }\r\n}\r\n\r\nexport function setPhoto(photos: File) {\r\n    return async function (dispatch: Dispatch<ProfilePageActionTypes>) {\r\n        const newPhoto = await profileAPI.setPhoto(photos);\r\n        dispatch(setPhotoSuccess({...newPhoto.photos}))\r\n    }\r\n}\r\n\r\nexport function setProfileInfo(profileInfo: ProfileInfoType) {\r\n    return async function (dispatch: Dispatch<ProfilePageActionTypes | ThunkActionType>, getState: () => RootState) {\r\n        const userId = getState().auth.userData?.id as number;\r\n        const profile = getState().profilePage.profile\r\n        const mappedProfileInfo = {\r\n            userId: userId,\r\n            ...profileInfo\r\n        }\r\n        let newProfile = {...profile as ProfileType, ...mappedProfileInfo}\r\n\r\n\r\n        const response = await profileAPI.setProfileInfo(mappedProfileInfo);\r\n        if (response.resultCode == 0) {\r\n            dispatch(requestProfile(userId));\r\n            dispatch(changeSubmitStatus('success', undefined))\r\n        }else{\r\n            dispatch(changeSubmitStatus('failed', response.messages[0]))\r\n            dispatch(setProfile(newProfile))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","import {v1} from 'uuid';\r\n\r\nexport type DialogType = {\r\n    id: string,\r\n    name: string,\r\n    photo: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: string,\r\n    message: string,\r\n    fromYou: boolean,\r\n    photo: string\r\n}\r\n\r\ntype InitialStateType = {\r\n    dialogs: Array<DialogType>,\r\n    messages: Array<MessageType>\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    dialogs: [\r\n        {\r\n            id: v1(),\r\n            name: 'Dimych',\r\n            photo: 'http://i.imgur.com/EroY8Ii.png'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Segesa',\r\n            photo: 'http://i.imgur.com/EroY8Ii.png'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Jeja',\r\n            photo: 'http://i.imgur.com/EroY8Ii.png'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Olga',\r\n            photo: 'http://i.imgur.com/EroY8Ii.png'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Seka',\r\n            photo: 'http://i.imgur.com/EroY8Ii.png'\r\n        }\r\n    ],\r\n    messages: [\r\n        {\r\n            id: v1(),\r\n            message: 'sad',\r\n            fromYou: true,\r\n            photo: 'https://uznayvse.ru/images/content/2020/1/uzn_15788272160.jpg'\r\n        },\r\n        {\r\n            id: v1(),\r\n            message: 'Hi',\r\n            fromYou: false,\r\n            photo: 'http://i.imgur.com/EroY8Ii.png'\r\n        },\r\n        {\r\n            id: v1(),\r\n            message: 'sad',\r\n            fromYou: true,\r\n            photo: 'https://uznayvse.ru/images/content/2020/1/uzn_15788272160.jpg'\r\n        },\r\n        {\r\n            id: v1(),\r\n            message: 'asddasdasdasd s das das das das das das as dasdas da',\r\n            fromYou: false,\r\n            photo: 'http://i.imgur.com/EroY8Ii.png'\r\n        },\r\n        {\r\n            id: v1(),\r\n            message: 'sad',\r\n            fromYou: true,\r\n            photo: 'https://uznayvse.ru/images/content/2020/1/uzn_15788272160.jpg'\r\n        },\r\n        {\r\n            id: v1(),\r\n            message: 'Hi',\r\n            fromYou: false,\r\n            photo: 'http://i.imgur.com/EroY8Ii.png'\r\n        },\r\n\r\n    ]\r\n};\r\n\r\nfunction dialogsReducer(state: InitialStateType = initialState, action: DialogsActionTypes): InitialStateType {\r\n    switch (action.type) {\r\n        case 'social-network/dialogs/SEND-MESSAGE': {\r\n            let newMessage = {\r\n                id: v1(),\r\n                message: action.message,\r\n                fromYou: true,\r\n                photo: 'https://uznayvse.ru/images/content/2020/1/uzn_15788272160.jpg'\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport type DialogsActionTypes = SendMessageActionType;\r\n\r\nconst SEND_MESSAGE = 'social-network/dialogs/SEND-MESSAGE';\r\n\r\n\r\nexport type SendMessageActionType = {\r\n    type: typeof SEND_MESSAGE,\r\n    message: string\r\n};\r\n\r\n\r\nexport const sendMessage = (message: string): SendMessageActionType => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        message\r\n    }\r\n}\r\n\r\n\r\nexport default dialogsReducer;","export default __webpack_public_path__ + \"static/media/userPhoto.f0289936.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2N_i_\"};","import axios from 'axios';\r\nimport {LoginDataType} from '../components/Login/Login';\r\nimport {ProfileInfoType} from '../redux/profile-reducer';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.1/',\r\n    headers: {\r\n        'API-KEY': 'c16d0024-98a6-4b7a-a16a-0ba438364551'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers: async function (page: number, pageSize: number) {\r\n        const response = await instance.get(`users?page=${page}&count=${pageSize}`);\r\n        return response.data;\r\n    },\r\n    followUser: async function (id: number) {\r\n        const response = await instance.post(`follow/${id}`);\r\n        return response.data;\r\n    },\r\n    unFollowUser: async function (id: number) {\r\n        const response = await instance.delete(`follow/${id}`);\r\n        return response.data;\r\n    }\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfileInfo: async function (userId: number) {\r\n        const response = await instance.get(`profile/${userId}`);\r\n        return response.data;\r\n    },\r\n    getStatus: async function (userId: number) {\r\n        const response = await instance.get(`profile/status/${userId}`)\r\n        return response.data;\r\n    },\r\n    setStatus: async function (status: string) {\r\n        const response = await instance.put(`profile/status`, {\r\n            status: status\r\n        });\r\n        return response.data;\r\n    },\r\n    setPhoto: async function (photoFile: File) {\r\n        let formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        const response = await instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n        return response.data.data;\r\n    },\r\n    setProfileInfo: async function(profileInfo: ProfileInfoType){\r\n        const response = await instance.put('profile/', profileInfo);\r\n\r\n        return response.data;\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    setLogin: async function (data: LoginDataType) {\r\n        const response = await instance.post('auth/login', {\r\n            email: data.email,\r\n            password: data.password,\r\n            rememberMe: data.rememberMe,\r\n            captcha: data.captcha\r\n        });\r\n        return response.data\r\n    },\r\n\r\n    logout: async function () {\r\n        const response = await instance.delete('auth/login')\r\n        return response.data;\r\n    },\r\n\r\n    getAuthInfo: async function () {\r\n        const response = await instance.get('auth/me')\r\n        return response.data;\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    async getCaptchaURL(){\r\n        const response = await instance.get('security/get-captcha-url');\r\n        return response.data;\r\n    }\r\n}"],"sourceRoot":""}